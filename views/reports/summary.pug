include ../partials/reportLoadingOverlay.pug

doctype html
mixin summaryCards(summary)
  - const headlineCards = []
  - headlineCards.push({ label: 'Продажи (грн)', value: summary.sales, accent: 'text-primary' })
  - headlineCards.push({ label: 'Прибыль (грн)', value: summary.profit, accent: 'text-danger' })
  - headlineCards.push({ label: 'Маржа (грн)', value: summary.margin })
  - headlineCards.push({ label: 'Расходы на рекламу (грн)', value: summary.adSpend })
  - const performanceCards = []
  - performanceCards.push({ label: 'Показы', value: summary.impressions })
  - performanceCards.push({ label: 'Клики', value: summary.clicks })
  - performanceCards.push({ label: 'CTR', value: `${summary.ctr}%` })
  - performanceCards.push({ label: 'CPA', value: summary.cpa })
  - performanceCards.push({ label: 'Конверсия клики→транзакции', value: `${summary.clickToTransConversion}%` })
  - performanceCards.push({ label: 'Транзакции', value: summary.transactions })
  - performanceCards.push({ label: 'ROI', value: `${summary.roi}%` })
  - performanceCards.push({ label: '% прибыли от оборота', value: `${summary.profitToSalesRatio}%`, style: summary.profitToSalesRatioStyle })
  - const groups = [headlineCards, performanceCards]

  each group, groupIndex in groups
    .row(class=groupIndex === 0 ? '' : 'mt-2')
      each metric in group
        .col-xl-3.col-lg-4.col-sm-6.mt-3
          .card.shadow-sm.border-0
            .card-body
              small.text-uppercase.text-muted= metric.label
              if metric.style
                h4.mb-0(style=metric.style)= metric.value
              else if metric.accent
                h4.mb-0(class=metric.accent)= metric.value
              else
                h4.mb-0= metric.value

html(lang="ru")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Сводный отчёт
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
  body
    if alerts && alerts.length
      .position-fixed(style="top: 1rem; right: 1rem; z-index: 1080; width: 320px;")
        each alertMessage in alerts
          .alert.alert-danger.alert-dismissible.fade.show(role="alert")
            span= alertMessage
            button.close(type="button", data-dismiss="alert", aria-label="Close")
              span(aria-hidden="true") &times;
    .container-fluid
      .d-flex.justify-content-between.align-items-center.mt-4
        h1.mb-0.text-primary Сводный отчёт
        a.btn.btn-outline-secondary(href="/") К выбору отчётов
      p.text-muted.mt-2.mb-4
        | Период:
        strong #{startDate} – #{endDate}
      if rateLimitMeta
        - const minuteLimit = rateLimitMeta.minuteLimit
        - const minuteIntervalSeconds = rateLimitMeta.minuteIntervalSeconds
        - const hourlyLimit = rateLimitMeta.hourlyLimit
        - const dailyLimit = rateLimitMeta.dailyLimit
        - const hourlyUsed = hourlyStats && typeof hourlyStats.used === 'number' ? hourlyStats.used : 0
        - const hourlyRemaining = hourlyStats && typeof hourlyStats.remaining === 'number' ? hourlyStats.remaining : Math.max(hourlyLimit - hourlyUsed, 0)
        - const hourlyResetMs = hourlyStats && typeof hourlyStats.resetInMs === 'number' ? hourlyStats.resetInMs : 0
        - const hourlyResetSeconds = Math.max(Math.ceil(hourlyResetMs / 1000), 0)
        - const hourlyResetMinutes = Math.floor(hourlyResetSeconds / 60)
        - const hourlyResetSecs = hourlyResetSeconds % 60
        - const dailyUsed = dailyStats && typeof dailyStats.used === 'number' ? dailyStats.used : 0
        - const dailyRemaining = dailyStats && typeof dailyStats.remaining === 'number' ? dailyStats.remaining : Math.max(dailyLimit - dailyUsed, 0)
        - const dailyResetMs = dailyStats && typeof dailyStats.resetInMs === 'number' ? dailyStats.resetInMs : 0
        - const dailyResetSeconds = Math.max(Math.ceil(dailyResetMs / 1000), 0)
        - const dailyResetHours = Math.floor(dailyResetSeconds / 3600)
        - const dailyResetMinutes = Math.floor((dailyResetSeconds % 3600) / 60)
        .alert.alert-info(role="alert")
          | SalesDrive: #{minuteLimit} запросов / #{minuteIntervalSeconds} с, #{hourlyLimit} в час и #{dailyLimit} в сутки.
          br
          | Использовано #{hourlyUsed}, осталось #{hourlyRemaining}. Обновление часового лимита через #{hourlyResetMinutes} мин #{hourlyResetSecs} с.
          if typeof dailyLimit === 'number'
            br
            | За сутки выполнено #{dailyUsed}, осталось #{dailyRemaining}. Обновление суточного лимита примерно через #{dailyResetHours} ч #{dailyResetMinutes} мин.

      form.form-inline.mb-4(action="/reports/summary", method="get", data-report-form)
        .form-group.mr-2
          label.sr-only(for="startDate") Начало
          input#startDate.form-control(type="date", name="startDate", value=startDate)
        .form-group.mr-2
          label.sr-only(for="endDate") Конец
          input#endDate.form-control(type="date", name="endDate", value=endDate)
        .form-group.mr-2.d-flex.flex-column
          label.sr-only(for="source") Источник продаж
          button#selectAllSources.btn.btn-sm.btn-outline-secondary.mb-2(type="button") Выбрать все источники
          select#source.form-control(name="source", multiple, size="6")
            if salesDriveIstocniki
              each source in salesDriveIstocniki
                - const isSelected = Array.isArray(selectedSources) ? selectedSources.includes(source.id.toString()) : false
                - const nameViewSafe = typeof source.nameView === 'string' ? source.nameView.trim() : ''
                - const displayName = nameViewSafe || source.name || source.ident
                option(value=source.id, selected=isSelected)= `${source.ident} (${displayName || source.id})`
            else
              option(value="", selected=false) Источники не настроены
        button.btn.btn-primary(type="submit") Обновить
        a.btn.btn-outline-secondary.ml-2(href="/reports/summary", data-report-link) Сбросить
        if salesDriveLimit
          input(type="hidden", name="limit", value=salesDriveLimit)

      if rateLimitCooldown
        .alert.alert-warning
          | CRM временно ограничила частоту запросов. Ориентировочное ожидание: #{rateLimitCooldownSeconds || '—'} с.

      if summaryReport
        if sourceSummaries && sourceSummaries.length
          if sourceSummaries.length > 1
            h3.mt-4.text-secondary Детализация по источникам
            .accordion(id="sourceSummaryAccordion")
              each sourceSummary, idx in sourceSummaries
                - const collapseId = `source-summary-${idx}`
                - const headerLabelView = typeof sourceSummary.nameView === 'string' ? sourceSummary.nameView.trim() : ''
                - const headerLabel = headerLabelView || sourceSummary.name || sourceSummary.ident
                .card.mb-2
                  .card-header.p-0
                    h5.mb-0
                      button.btn.btn-link.btn-block.text-left(type="button", data-toggle="collapse", data-target=`#${collapseId}`, aria-expanded=(idx === 0 ? 'true' : 'false'), aria-controls=collapseId)= headerLabel
                  .collapse(id=collapseId, class=(idx === 0 ? 'show' : ''), data-parent="#sourceSummaryAccordion")
                    .card-body
                      +summaryCards(sourceSummary.summary)
          else
            - const onlySource = sourceSummaries[0]
            - const onlySourceLabelView = typeof onlySource.nameView === 'string' ? onlySource.nameView.trim() : ''
            - const onlySourceLabel = onlySourceLabelView || onlySource.name || onlySource.ident
            h3.mt-4.text-secondary= `Источник: ${onlySourceLabel}`
            +summaryCards(onlySource.summary)
        if sourceSummaries && sourceSummaries.length > 1
          hr.my-4(style="border-top: 3px solid #dc3545;")
        h3.mt-4.text-danger Общая информация по выбранным источникам
        +summaryCards(summaryReport)
      else
        .alert.alert-warning Не найдено данных за выбранный период.

      h3.mt-5.text-secondary Заказы SalesDrive
      .table-responsive.mt-3
        table.table.table-striped.table-bordered
          thead.thead-dark
            tr
              th Номер заказа
              th Клиент
              th Время заказа
              th Товары
              th Статус
              th Сумма
              th Источник
          tbody
            if salesDriveData && salesDriveData.length
              each item in salesDriveData
                tr
                  td= item.id
                  td= `${item.fName} ${item.lName}`.trim()
                  td= item.orderTime
                  td= item.products
                  td= item.statusName
                  td= item.totalCost
                  td= item.istocnikProdaziIdent
            else
              tr
                td(colspan="7").text-center Данные отсутствуют

    - const overlayMeta = typeof reportOverlayMeta !== 'undefined' ? reportOverlayMeta : {}
    +reportLoadingOverlay(overlayMeta)
    script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js")
    script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")
    script.
      document.addEventListener('DOMContentLoaded', function () {
        var selectAllButton = document.getElementById('selectAllSources');
        var sourceSelect = document.getElementById('source');
        if (!selectAllButton || !sourceSelect) {
          return;
        }
        selectAllButton.addEventListener('click', function () {
          Array.from(sourceSelect.options).forEach(function (option) {
            option.selected = true;
          });
        });
      });
