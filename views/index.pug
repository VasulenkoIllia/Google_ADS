doctype html
mixin summaryCards(summary)
  - const headlineCards = [];
  - headlineCards.push({ label: 'Продажі (грн)', value: summary.sales, accent: 'text-primary' });
  - headlineCards.push({ label: 'Прибуток (грн)', value: summary.profit, accent: 'text-danger' });
  - headlineCards.push({ label: 'Маржа (грн)', value: summary.margin });
  - headlineCards.push({ label: 'Витрати на рекламу (грн)', value: summary.adSpend });
  - const performanceCards = [];
  - performanceCards.push({ label: 'Impressions', value: summary.impressions });
  - performanceCards.push({ label: 'Кліки', value: summary.clicks });
  - performanceCards.push({ label: 'CTR', value: `${summary.ctr}%` });
  - performanceCards.push({ label: 'CPA', value: summary.cpa });
  - performanceCards.push({ label: 'Конверсія кліки→транзакції', value: `${summary.clickToTransConversion}%` });
  - performanceCards.push({ label: 'Транзакції', value: summary.transactions });
  - performanceCards.push({ label: 'ROI', value: `${summary.roi}%` });
  - performanceCards.push({ label: '% прибутку від обороту', value: `${summary.profitToSalesRatio}%`, style: summary.profitToSalesRatioStyle });
  - const planCards = [];
  - planCards.push({ label: 'План продаж (період)', value: summary.planSales });
  - planCards.push({ label: 'Факт vs план (період)', value: `${summary.salesFactDeviation}%` });
  - planCards.push({ label: 'План продаж (місяць)', value: summary.planSalesMonthly });
  - planCards.push({ label: 'План прибутку (період)', value: summary.planProfit });
  - planCards.push({ label: 'Факт прибутку vs план', value: `${summary.profitFactDeviation}%` });
  - planCards.push({ label: 'План прибутку (місяць)', value: summary.planProfitMonthly });
  - planCards.push({ label: 'Середній чек', value: summary.aov });
  - planCards.push({ label: 'Днів у періоді', value: summary.daysInPeriod });

  each group, groupIndex in [headlineCards, performanceCards, planCards]
    .row(class=groupIndex === 0 ? '' : 'mt-1')
      each metric, idx in group
        .col-xl-3.col-lg-4.col-sm-6.mt-3
          .card.shadow-sm.border-0
            .card-body
              small.text-uppercase.text-muted= metric.label
              if metric.style
                h4.mb-0(style=metric.style)= metric.value
              else if metric.accent
                h4.mb-0(class=metric.accent)= metric.value
              else
                h4.mb-0= metric.value

html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Sales and Ads Data Dashboard
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
  body
    if alerts && alerts.length
      .position-fixed(style="top: 1rem; right: 1rem; z-index: 1080; width: 320px;")
        each alertMessage in alerts
          .alert.alert-danger.alert-dismissible.fade.show(role="alert")
            span= alertMessage
            button.close(type="button", data-dismiss="alert", aria-label="Close")
              span(aria-hidden="true") &times;
    .container-fluid
      h1.my-4 Sales and Ads Data Dashboard
      if hourlyStats || typeof hourlyLimit === 'number'
        - const resolvedHourlyLimit = typeof (hourlyStats && hourlyStats.limit) === 'number' ? hourlyStats.limit : (typeof hourlyLimit === 'number' ? hourlyLimit : 100)
        - const resolvedMinuteLimit = typeof minuteLimit === 'number' ? minuteLimit : 10
        - const resolvedMinuteSeconds = typeof minuteIntervalSeconds === 'number' ? minuteIntervalSeconds : 60
        - const hourlyUsed = typeof (hourlyStats && hourlyStats.used) === 'number' ? hourlyStats.used : 0
        - const hourlyRemaining = Math.max(resolvedHourlyLimit - hourlyUsed, 0)
        - const hourlyResetSeconds = typeof (hourlyStats && hourlyStats.resetInMs) === 'number' ? Math.ceil(hourlyStats.resetInMs / 1000) : 0
        - const hourlyResetMinutes = Math.floor(hourlyResetSeconds / 60)
        - const hourlyResetSecs = hourlyResetSeconds % 60
        .alert.alert-info.mt-3(role="alert")
          | CRM дозволяє #{resolvedMinuteLimit} запитів за #{resolvedMinuteSeconds} секунд та #{resolvedHourlyLimit} запитів за годину.
          br
          | Використано #{hourlyUsed}, залишилось #{hourlyRemaining}. Квота оновиться приблизно через #{hourlyResetMinutes} хв #{hourlyResetSecs} с.
      p
        strong Date Range:
        | #{startDate} to #{endDate}

      form.form-inline.mb-4(action="/", method="get")
        .form-group.mr-2
          label.sr-only(for="startDate") Start date
          input#startDate.form-control(type="date", name="startDate", value=startDate, max=endDate)
        .form-group.mr-2
          label.sr-only(for="endDate") End date
          input#endDate.form-control(type="date", name="endDate", value=endDate, min=startDate)

        .form-group.mr-2
          label.sr-only(for="source") Sales Source
          select#source.form-control(name="source", multiple, size="6")
            if salesDriveIstocniki
              each source in salesDriveIstocniki
                - const isSelected = Array.isArray(selectedSources) ? selectedSources.includes(source.id.toString()) : false
                option(value=source.id, selected=isSelected)= source.ident
            else
              option(value="", selected=false) No sources configured
        .form-group.mr-2
          label.sr-only(for="planSales") План продаж
          - const planSalesPlaceholder = planDefaults && typeof planDefaults.sales === 'number' ? planDefaults.sales.toFixed(2) : ''
          input#planSales.form-control(type="number", min="0", step="0.01", name="planSales", value=planInputs && planInputs.sales !== undefined ? planInputs.sales : '', placeholder=planSalesPlaceholder, title=`Поточний план продаж (місяць): ${planSalesPlaceholder || 'невизначено'}`)
        .form-group.mr-2
          label.sr-only(for="planProfit") План прибутку
          - const planProfitPlaceholder = planDefaults && typeof planDefaults.profit === 'number' ? planDefaults.profit.toFixed(2) : ''
          input#planProfit.form-control(type="number", min="0", step="0.01", name="planProfit", value=planInputs && planInputs.profit !== undefined ? planInputs.profit : '', placeholder=planProfitPlaceholder, title=`Поточний план прибутку (місяць): ${planProfitPlaceholder || 'невизначено'}`)

        button.btn.btn-primary(type="submit") Update range
        a.btn.btn-outline-secondary.ml-2(href="/") Reset

        input(type="hidden", name="activeTab", id="activeTabInput", value=activeTab || 'summary')
        if salesDriveLimit
          input(type="hidden", name="limit", value=salesDriveLimit)


      // Nav tabs
      ul.nav.nav-tabs(id="myTab", role="tablist")
        - const currentTab = activeTab || 'summary-tab'
        li.nav-item
          a.nav-link(id="summary-tab", class=(currentTab === 'summary-tab' ? 'active' : ''), data-toggle="tab", href="#summary", role="tab", aria-controls="summary", aria-selected=(currentTab === 'summary-tab')) Summary Report
        li.nav-item
          a.nav-link(id="google-ads-tab", class=(currentTab === 'google-ads-tab' ? 'active' : ''), data-toggle="tab", href="#google-ads", role="tab", aria-controls="google-ads", aria-selected=(currentTab === 'google-ads-tab')) Google Ads
        li.nav-item
          a.nav-link(id="salesdrive-tab", class=(currentTab === 'salesdrive-tab' ? 'active' : ''), data-toggle="tab", href="#salesdrive", role="tab", aria-controls="salesdrive", aria-selected=(currentTab === 'salesdrive-tab')) SalesDrive CRM
        li.nav-item
          a.nav-link(id="combined-tab", class=(currentTab === 'combined-tab' ? 'active' : ''), data-toggle="tab", href="#combined", role="tab", aria-controls="combined", aria-selected=(currentTab === 'combined-tab')) Combined Data

      // Tab content
      .tab-content(id="myTabContent")
        // Summary Tab
        #summary.tab-pane.fade(class=(currentTab === 'summary-tab' ? 'show active' : ''), role="tabpanel", aria-labelledby="summary-tab")
          h3.mt-3 Summary Report
          if summaryReport
            if sourceSummaries && sourceSummaries.length
              if sourceSummaries.length > 1
                h4.mt-3.text-primary Деталізація за джерелами
                .accordion(id="sourceSummaryAccordion")
                  each sourceSummary, idx in sourceSummaries
                    - const collapseId = `source-summary-${idx}`
                    - const headerLabel = sourceSummary.name || sourceSummary.ident
                    .card.mb-2
                      .card-header.p-0
                        h5.mb-0
                          button.btn.btn-link.btn-block.text-left(type="button", data-toggle="collapse", data-target=`#${collapseId}`, aria-expanded=(idx === 0 ? 'true' : 'false'), aria-controls=collapseId)= headerLabel
                      .collapse(id=collapseId, class=(idx === 0 ? 'show' : ''), data-parent="#sourceSummaryAccordion")
                        .card-body
                          +summaryCards(sourceSummary.summary)
              else
                - const onlySource = sourceSummaries[0]
                h4.mt-3.text-primary= `Джерело: ${onlySource.name || onlySource.ident}`
                +summaryCards(onlySource.summary)
            if sourceSummaries && sourceSummaries.length > 1
              hr.my-4(style="border-top: 3px solid #dc3545;")
            h4.mt-3.text-danger Загальна інформація по вибраних джерелах
            +summaryCards(summaryReport)
            .card.mt-3.border-info
              .card-header.bg-info.text-white ПЛАН НА МІСЯЦЬ
              .card-body.py-3
                p.mb-2
                  strong Продаж:
                  |  #{summaryReport.planSalesMonthly} грн
                p.mb-0
                  strong Прибуток:
                  |  #{summaryReport.planProfitMonthly} грн
          else
            .alert.alert-warning No summary data available.

        // Google Ads Tab
        #google-ads.tab-pane.fade(class=(currentTab === 'google-ads-tab' ? 'show active' : ''), role="tabpanel", aria-labelledby="google-ads-tab")
          h3.mt-3 Google Ads Data
          .table-responsive.mt-2
            table.table.table-striped.table-bordered
              thead.thead-dark
                tr
                  th Source Identifier
                  th Ad Title
                  th Clicks
                  th Impressions
                  th Витрати (грн)
              tbody
                if googleAdsData && googleAdsData.length
                  each item in googleAdsData
                    tr
                      td= item.istocnikProdaziIdent
                      td= item.title
                      td= item.clicks
                      td= item.impressions
                      td= item.costUah
                else
                  tr
                    td(colspan="5").text-center No Google Ads data available

        // SalesDrive Tab
        #salesdrive.tab-pane.fade(class=(currentTab === 'salesdrive-tab' ? 'show active' : ''), role="tabpanel", aria-labelledby="salesdrive-tab")
          h3.mt-3 SalesDrive CRM Data
          .table-responsive.mt-2
            table.table.table-striped.table-bordered
              thead.thead-dark
                tr
                  th Order ID
                  th Customer Name
                  th Order Time
                  th Products
                  th Order Status
                  th Total Cost
                  th Source Identifier
              tbody
                if salesDriveData && salesDriveData.length
                  each item in salesDriveData
                    tr
                      td= item.id
                      td= `${item.fName} ${item.lName}`
                      td= item.orderTime
                      td= item.products
                      td= item.statusName
                      td= item.totalCost
                      td= item.istocnikProdaziIdent
                else
                  tr
                    td(colspan="7").text-center No SalesDrive data available

        // Combined Tab
        #combined.tab-pane.fade(class=(currentTab === 'combined-tab' ? 'show active' : ''), role="tabpanel", aria-labelledby="combined-tab")
          h3.mt-3 Combined Data
          .table-responsive.mt-2
            table.table.table-striped.table-bordered
              thead.thead-dark
                tr
                  th SalesDrive Order ID
                  th Customer Name
                  th Order Time
                  th Products
                  th Order Status
                  th Total Cost
                  th Source Identifier
                  th Google Ads Title
                  th Clicks
                  th Impressions
                  th Витрати (грн)
              tbody
                if combinedData && combinedData.length
                  each item in combinedData
                    tr
                      td= item.id
                      td= `${item.fName} ${item.lName}`
                      td= item.orderTime
                      td= item.products
                      td= item.statusName
                      td= item.totalCost
                      td= item.istocnikProdaziIdent
                      if item.googleAdsData
                        td= item.googleAdsData.title
                        td= item.googleAdsData.clicks
                        td= item.googleAdsData.impressions
                        td= item.googleAdsData.costUah
                      else
                        td(colspan="4").text-muted No matching Google Ads data
                else
                  tr
                    td(colspan="11").text-center No combined data available

    script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js")
    script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")
    script.
      $(document).ready(function () {
        // When a new tab is shown, update the hidden input field
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
          var tabId = $(e.target).attr('id');
          $('#activeTabInput').val(tabId);
        });

        var timerNode = document.getElementById('rate-limit-timer');
        if (timerNode) {
          var remaining = parseInt(timerNode.getAttribute('data-seconds'), 10) || 65;
          timerNode.textContent = remaining;
          var intervalId = setInterval(function () {
            remaining -= 1;
            if (remaining <= 0) {
              timerNode.textContent = '0';
              clearInterval(intervalId);
            } else {
              timerNode.textContent = remaining;
            }
          }, 1000);
        }
      });
